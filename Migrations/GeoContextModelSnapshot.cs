// <auto-generated />
using System;
using GraphQlIntro.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GraphQlIntro.Migrations
{
    [DbContext(typeof(GeoContext))]
    partial class GeoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("GraphQlIntro.Model.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("GraphQlIntro.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CapitalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CapitalId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("GraphQlIntro.Model.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("GraphQlIntro.Model.City", b =>
                {
                    b.HasOne("GraphQlIntro.Model.Country", null)
                        .WithMany("Cities")
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("GraphQlIntro.Model.Country", b =>
                {
                    b.HasOne("GraphQlIntro.Model.City", "Capital")
                        .WithMany()
                        .HasForeignKey("CapitalId");

                    b.Navigation("Capital");
                });

            modelBuilder.Entity("GraphQlIntro.Model.Site", b =>
                {
                    b.HasOne("GraphQlIntro.Model.City", null)
                        .WithMany("Sites")
                        .HasForeignKey("CityId");
                });

            modelBuilder.Entity("GraphQlIntro.Model.City", b =>
                {
                    b.Navigation("Sites");
                });

            modelBuilder.Entity("GraphQlIntro.Model.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
